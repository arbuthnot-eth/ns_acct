{
    "packageId": "0xb8c60b622c8590e97f6bef6bb42211d57c5588b75ef514629d6d7bf89ab257c6",
    "network": "testnet",
    "deployer": "0x3db42086e9271787046859d60af7933fa7ea70148df37c9fd693195533eabb57",
    "timestamp": "2025-01-20T06:52:40Z",
    "explorerUrl": "https://suiscan.xyz/testnet/object/0xb8c60b622c8590e97f6bef6bb42211d57c5588b75ef514629d6d7bf89ab257c6",
    "transactionDigest": "G7MkbMgWhFfrS9v1B6Zvfvzf2zSog47bi6Mwu216nBZN",
    "upgradeCap": "0x83e813649dc4f501876a700efbf3991c0fd16b7c77aec842e4f40acbd98679fa",
    "version": "v4_cross_domain_subdomains",
    "features": [
        "Cross-domain subdomain creation",
        "alice.sui owner creates alice.acct.sui",
        "Namespace owner (acct.sui) grants permission via SubdomainCap",
        "User proves domain ownership to get subdomain",
        "Full account features for subdomains",
        "Parent registry tracking",
        "Domain extraction utilities"
    ],
    "newFunctions": [
        "create_cross_domain_subdomain(parent_reg, user_reg, subdomain_cap)",
        "register_cross_domain_subdomain(parent_reg, user_reg, parent_acct, subdomain_acct_id)",
        "extract_name_from_domain(domain_str) -> name"
    ],
    "workflow": {
        "step1": "acct.sui owner calls request_subdomain_cap() -> gets SubdomainCap",
        "step2": "alice.sui owner + SubdomainCap -> create_cross_domain_subdomain() -> alice.acct.sui",
        "step3": "acct.sui owner calls register_cross_domain_subdomain() to track in registry",
        "step4": "alice.sui owner manages alice.acct.sui using their domain ownership"
    },
    "note": "Revolutionary cross-domain system: namespace providers can offer subdomains while users retain ownership through their existing domains."
}
